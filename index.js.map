{"mappings":"ACAA,IAAI,WAAE,6BAAO,EAAE,GAAG,QAAQ,GAAG;AAGd;IACb,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,QAAQ,GAAG,CAAC,OAAO,GAAG,yBAAyB;QAC5E,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;IACzC;AACF;;;ADTA,MAAM,8BAAQ,SAAS,cAAc,CAAC;AACtC,MAAM,iCAAW,SAAS,cAAc,CAAC;AACzC,MAAM,oCAAc,SAAS,cAAc,CAAC;AAC5C,MAAM,iCAAW,SAAS,aAAa,CAAC;AACxC,4BAAM,KAAK,CAAC,OAAO,GAAG;AAEtB,MAAM,kCAAY,SAAS,aAAa,CAAC;AAEzC,mDAAmD;AACnD,eAAe;IACb,MAAM,OAAO,MAAM,CAAA,GAAA,wCAAU;IAC3B,IAAI;QACA,MAAM,YAAY,KAAK,GAAG,CAAC,CAAA;YACzB,OAAO,CAAC;uCACqB,EAAE,KAAK,SAAS,CAAC;;0BAE9B,EAAE,KAAK,MAAM,CAAC,OAAO,EAAE,KAAK,GAAG,CAAC;;;UAGhD,CAAC;QACH,GAAG,IAAI,CAAC;QACR,gCAAU,kBAAkB,CAAC,aAAa;QAE1C,2DAA2D;QAC3D;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,6BAA0B;IAC5C;AACJ;AAEA,wDAAwD;AACxD,SAAS;IACL,MAAM,SAAS,SAAS,gBAAgB,CAAC;IACzC,OAAO,OAAO,CAAC,CAAA;QACX,IAAI,gBAAgB,CAAC,SAAS;YAC1B,kCAAY,WAAW,GAAG;YAC1B,4BAAM,KAAK,CAAC,OAAO,GAAG;YACtB,+BAAS,GAAG,GAAG,IAAI,CAAC,GAAG;YAEvB,MAAM,UAAU,IAAI,CAAC,OAAO,CAAC;YAC7B,MAAM,cAAc,UAAU,QAAQ,OAAO,CAAC,WAAW,GAAG;YAC5D,MAAM,UAAU,eAAe,IAAI,CAAC,GAAG;YAEvC,kCAAY,SAAS,GAAG,CAAC,GAAG,EAAE,QAAQ,IAAI,CAAC;QAC/C;IACJ;AACJ;AAEA,2BAA2B;AAC3B,+BAAS,gBAAgB,CAAC,SAAS;IAC/B,4BAAM,KAAK,CAAC,OAAO,GAAG;AAC1B;AAEA,oCAAoC;AACpC,OAAO,gBAAgB,CAAC,SAAS,SAAU,KAAK;IAC5C,IAAI,MAAM,MAAM,KAAK,6BACjB,4BAAM,KAAK,CAAC,OAAO,GAAG;AAE9B;AAEA,uEAAuE;AACvE,SAAS,gBAAgB,CAAC,oBAAoB","sources":["assets/js/index.js","assets/js/fetchApis.js"],"sourcesContent":["import fetchImages from \"./fetchApis\";\n\nconst modal = document.getElementById(\"modal\");\nconst modalImg = document.getElementById(\"modal-img\");\nconst captionText = document.getElementById(\"caption\");\nconst closeBtn = document.querySelector(\".close\");\nmodal.style.display = \"none\";\n\nconst imageGrid = document.querySelector(\".image-grid\");\n\n// Função para buscar e exibir os dados do endpoint\nasync function displayImages() {\n  const data = await fetchImages();\n    try {\n        const postsList = data.map(item => {\n          return `\n            <article data-description=\"${item.descricao}\">\n              <figure>\n                <img src=\"${item.imgUrl}\" alt=\"${item.alt}\" />\n              </figure>\n            </article>\n          `\n        }).join('');\n        imageGrid.insertAdjacentHTML('beforeend', postsList)\n\n        // Adicionando eventos de clique para cada imagem carregada\n        addImageClickEvents();\n    } catch (error) {\n        console.error(\"Erro ao popular página\", error);\n    }\n}\n\n// Função para adicionar os eventos de clique às imagens\nfunction addImageClickEvents() {\n    const images = document.querySelectorAll(\".image-grid img\");\n    images.forEach(img => {\n        img.addEventListener(\"click\", function () {\n            captionText.textContent = \"\";\n            modal.style.display = \"block\";\n            modalImg.src = this.src;\n\n            const article = this.closest(\"article\");\n            const description = article ? article.dataset.description : '';\n            const caption = description || this.alt;\n\n            captionText.innerHTML = `<p>${caption}</p>`;\n        });\n    });\n}\n\n// Evento de fechar o modal\ncloseBtn.addEventListener(\"click\", function () {\n    modal.style.display = \"none\";\n});\n\n// Fechar o modal clicando fora dele\nwindow.addEventListener(\"click\", function (event) {\n    if (event.target === modal) {\n        modal.style.display = \"none\";\n    }\n});\n\n// Chamar a função para buscar e exibir as imagens ao carregar a página\ndocument.addEventListener(\"DOMContentLoaded\", displayImages);\n","let { API_URL } = process.env;\n\n// Função para buscar os dados do endpoint\nexport default async function fetchImages() {\n  try {\n    const response = await fetch(process.env.API_URL); // Usando a URL importada\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Erro ao buscar dados:\", error);\n  }\n}\n"],"names":[],"version":3,"file":"index.js.map","sourceRoot":"/"}